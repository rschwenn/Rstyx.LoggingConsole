<?xml version="1.0" encoding="utf-8"?>
<topic id="8e228b41-35ab-4c64-a97c-dd2785338f15" revisionNumber="1">
  <developerConceptualDocument xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:xlink="http://www.w3.org/1999/xlink">
    <!-- for jedit: :mode=xml::folding=indent::indentSize=4::tabSize=4::collapseFolds=2: -->
    <summary>
      <para>A .NET Logging Component</para>
    </summary>
    <introduction>
      <!-- Uncomment this to generate an outline of the section and sub-section
           titles.  Specify a numeric value as the inner text to limit it to
           a specific number of sub-topics when creating the outline.  Specify
           zero (0) to limit it to top-level sections only.  -->
      <!-- <autoOutline /> -->
      <para> 
      LoggingConsole is a <legacyBold>.NET Class Library</legacyBold> designed for
      easyly adding lightweight and straightforward <legacyBold>in-memory logging</legacyBold> 
      as well as a <legacyBold>log viewer</legacyBold> to Your WPF or Windows Forms application.
      </para>
      
      <mediaLink>
          <!--<caption> The Log Viewer </caption>-->
          <image xlink:href="Screen_LoggingConsole-Floating"/>
      </mediaLink>
    </introduction>
    
    <!-- Add one or more top-level section elements.  These are collapsible.
         If using <autoOutline />, add an address attribute to identify it
         and specify a title so that it can be jumped to with a hyperlink. -->
    <section address="Content">
      <title>Content</title>
      <content>
        <!-- Uncomment this to create a sub-section outline
        <autoOutline /> -->
        
        <list class="bullet">
            <listItem>
                <link xlink:href="7b51d3dc-9bc8-4321-ac58-02577a5f1177"/>
            </listItem>
            <listItem>
                <link xlink:href="a18e4b6c-2cfa-405f-900f-8440c915c37c"/>
            </listItem>
            <listItem>
                <link xlink:href="1b8a4c95-5b05-4b62-8cf3-d1338cb15580"/>
            </listItem>
            <listItem>
                <link xlink:href="4ddd2343-626f-43b1-adfd-4831b7631635"/>
            </listItem>
            
            <!-- This tricky link may work inside a web site when R_Project_LoggingConsole.htm really exists... -->
            <!--<listItem>
                <externalLink>
                	<linkText>API Documentation</linkText>
                	<linkUri>./html/R_Project_LoggingConsole.htm</linkUri>
                	<linkTarget>_self</linkTarget>
                </externalLink>
            </listItem>-->
        </list>
        
      </content>
    </section>
    
    <relatedTopics>
      <!-- One or more of the following:
           - A local link
           - An external link
           - A code entity reference

      <link xlink:href="Other Topic's ID"/>
      <link xlink:href="Other Topic's ID">Link inner text</link>

      <externalLink>
          <linkText>Link text</linkText>
          <linkAlternateText>Optional alternate link text</linkAlternateText>
          <linkUri>URI</linkUri>
      </externalLink>

      <codeEntityReference>API member ID</codeEntityReference>

      Examples:

      <link xlink:href="00e97994-e9e6-46e0-b420-5be86b2f8270" />
      <link xlink:href="00e97994-e9e6-46e0-b420-5be86b2f8278">Some other topic</link>

      <externalLink>
          <linkText>SHFB on CodePlex</linkText>
          <linkAlternateText>Go to CodePlex</linkAlternateText>
          <linkUri>http://shfb.codeplex.com</linkUri>
      </externalLink>

      <codeEntityReference>T:TestDoc.TestClass</codeEntityReference>
      <codeEntityReference>P:TestDoc.TestClass.SomeProperty</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.#ctor</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.#ctor(System.String,System.Int32)</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.ToString</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.FirstMethod</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.SecondMethod(System.Int32,System.String)</codeEntityReference>
      -->
    </relatedTopics>
  </developerConceptualDocument>
</topic>