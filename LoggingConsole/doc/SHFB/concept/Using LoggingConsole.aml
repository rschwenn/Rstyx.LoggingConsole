<?xml version="1.0" encoding="utf-8"?>
<topic id="1b8a4c95-5b05-4b62-8cf3-d1338cb15580" revisionNumber="1">
  <developerConceptualDocument xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:xlink="http://www.w3.org/1999/xlink">
    <!-- for jedit: :mode=xml::folding=indent::indentSize=4::tabSize=4::collapseFolds=2: -->
    <!--
    <summary>
      <para>Optional summary abstract</para>
    </summary>
    -->
    <introduction> 
      <!-- Uncomment this to generate an outline of the section and sub-section
           titles.  Specify a numeric value as the inner text to limit it to
           a specific number of sub-topics when creating the outline.  Specify
           zero (0) to limit it to top-level sections only.  -->
      <!--<autoOutline />-->
      <para> 
          Since LoggingConsole is a library, this documentation is addressed to developers
          who want to add logging functionality to their application using LoggingConsole.
          From a user's point of view the handling should be simple.
      </para>
    </introduction>
    
    <!-- Add one or more top-level section elements.  These are collapsible.
         If using <autoOutline />, add an address attribute to identify it
         and specify a title so that it can be jumped to with a hyperlink. -->
    <section address="Main Components">
      <title> Main Components </title>
      <content>
        <!-- Uncomment this to create a sub-section outline
        <autoOutline /> -->
        
        <para>
            In general You may have to deal with these classes:
        </para>
        
        <table>
          <tableHeader>
            <row>
              <entry> <para> Class </para> </entry>
              <entry> <para> Purpose </para> </entry>
              <entry> <para> How to get </para> </entry>
              <entry> <para> Number of instances </para> </entry>
            </row>
          </tableHeader>
          
          <row>
            <entry> LogBox </entry>
            <entry> The <legacyBold> Hub </legacyBold> and Dispatcher </entry>
            <entry> LogBox.<codeEntityReference qualifyHint="false" autoUpgrade="true"> P:Rstyx.LoggingConsole.LogBox.Instance </codeEntityReference> </entry>
            <entry> One </entry>
          </row>
          
          <row>
            <entry> Logger </entry>
            <entry> The <legacyBold> Messenger </legacyBold> with a name </entry>
            <entry> LogBox.<codeEntityReference qualifyHint="false" autoUpgrade="true"> M:Rstyx.LoggingConsole.LogBox.getLogger </codeEntityReference> </entry>
            <entry> Any number </entry>
          </row>
          
          <row>
            <entry> Console </entry>
            <entry> The <legacyBold> Viewer </legacyBold> and Control Panel </entry>
            <entry> LogBox.Instance.<codeEntityReference qualifyHint="false" autoUpgrade="true"> P:Rstyx.LoggingConsole.LogBox.Console </codeEntityReference> </entry>
            <entry> One </entry>
          </row>
          
          <row>
            <entry> MessageStore </entry>
            <entry> The <legacyBold> Message Store </legacyBold> </entry>
            <entry> LogBox.Instance.<codeEntityReference qualifyHint="false" autoUpgrade="true"> P:Rstyx.LoggingConsole.LogBox.MessageStore </codeEntityReference> </entry>
            <entry> One </entry>
          </row>
        </table>
      </content>
    </section>
    
    <section address="Architecture">
      <title> Architecture </title>
      <content>
        <!-- Uncomment this to create a sub-section outline
        <autoOutline /> -->
        
        <para>
            <legacyBold>Hub:</legacyBold>
            Access to virtually every aspect of LoggingConsole is done through the 
            <codeEntityReference> T:Rstyx.LoggingConsole.LogBox </codeEntityReference> class.
        </para>
        
        <para>
            <legacyBold>Singleton</legacyBold> Main Components:
            Three of the four main components are Singleton classes. They cannot be instantiated directly.
            Instead, they are accessed by LogBox properties (see table above). 
            The first call of each property creates the instance.
        </para>
        
        <para>
            <alert class="note">
                <para>
                    Because using Singletons the LoggingConsole has an application-wide scope:
                    All logging You do inside an application goes into <legacyBold>one single
                    <codeEntityReference> T:Rstyx.LoggingConsole.MessageStore </codeEntityReference> </legacyBold>.
                </para>
            </alert>
        </para>
        
        <para>
            
        </para>
        
      </content>
    </section>
    
    <section address="Minimal Use Case">
      <title> Minimal Use Case </title>
      <content>
        <!-- Uncomment this to create a sub-section outline
        <autoOutline /> -->
        
        <para>
            If You just want to log some messages and have the viewer
            embedded in a window, these few lines of code are enough:
        </para>
        
        <para>
            <code language="xaml" title="XAML: Embed Console into a Window">
                ...
                xmlns:lc="clr-namespace:Rstyx.LoggingConsole;assembly=LoggingConsole"
                ...
                &lt;!-- The simplest way is to place it just like any other Control. 
                     It will connect by itself to the LogBox. --&gt;
                &lt;ContentControl&gt; &lt;lc:ConsoleView /&gt; &lt;/ContentControl&gt;
                ...
            </code>
        </para>
        
        <para>
            <code language="vbnet" title="Visual Basic: Log messages using built-in logging">
                ...
                'Get a Logger with any name
                Dim BuiltInLogger As Rstyx.LoggingConsole.Logger = Rstyx.LoggingConsole.LogBox.getLogger("Test.built-in")
                
                'Log some messages
                BuiltInLogger.logDebug("Test debug")
                BuiltInLogger.logInfo("Test Info")
                BuiltInLogger.logWarning("Test Warning")
                BuiltInLogger.logError("Test Error")
            </code>
        </para>
      </content>
    </section>
    
    
    <relatedTopics>
      <link xlink:href="c862fd66-3bb4-4b13-9499-52b7e7ed4a3d" />
      <link xlink:href="c46c7181-fb57-41ab-b7f9-a32993e71bc8" />
      <link xlink:href="061a8f6c-6013-4ad9-8375-9917a35c0331" />
      
      <!-- One or more of the following:
           - A local link
           - An external link
           - A code entity reference

      <link xlink:href="Other Topic's ID"/>
      <link xlink:href="Other Topic's ID">Link inner text</link>

      <externalLink>
          <linkText>Link text</linkText>
          <linkAlternateText>Optional alternate link text</linkAlternateText>
          <linkUri>URI</linkUri>
      </externalLink>

      <codeEntityReference>API member ID</codeEntityReference>

      Examples:

      <link xlink:href="00e97994-e9e6-46e0-b420-5be86b2f8270" />
      <link xlink:href="00e97994-e9e6-46e0-b420-5be86b2f8278">Some other topic</link>

      <externalLink>
          <linkText>SHFB on CodePlex</linkText>
          <linkAlternateText>Go to CodePlex</linkAlternateText>
          <linkUri>http://shfb.codeplex.com</linkUri>
      </externalLink>

      <codeEntityReference>T:TestDoc.TestClass</codeEntityReference>
      <codeEntityReference>P:TestDoc.TestClass.SomeProperty</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.#ctor</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.#ctor(System.String,System.Int32)</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.ToString</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.FirstMethod</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.SecondMethod(System.Int32,System.String)</codeEntityReference>
      -->
    </relatedTopics>
  </developerConceptualDocument>
</topic>